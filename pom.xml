<?xml version="1.0" encoding="UTF-8"?>

<!--
Common Resources for Data Platform Client Java API Libraries

Project provides tools for the following:
- Java-based interaction with the Data Platform
- Configuration management using YAML
- Tuning of gRPC parameters and techniques for optimized performance

Project requires the following (Dependencies):
- Data Platform gRPC communications framework (dp-grpc)
- Configuration management using YAML (Snake YAML)

NOTES:
- The dependency structure of this POM is too inclusive.  Once the project settles the
  dependencies should be culled. 
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

	<!-- Java API LIbrary Project Identification -->
	<name>Data Platform Java Client API</name>
	<description>Java language API for the Data Platform services.</description>
    <groupId>com.ospreydcs</groupId>
    <artifactId>dp-api-java</artifactId>
    <packaging>jar</packaging>
    <version>1.6.1</version>

    <properties>
		
        <!-- Project Properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <main.basedir>${project.basedir}</main.basedir>

		<!-- Maven Properties -->
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <maven-shade-plugin-version>3.6.0</maven-shade-plugin-version>
        
        <!-- Java - Override Version -->
        <java.version>16</java.version>
        <java.version>21</java.version>

        <!-- Java API Library Properties -->
        <dp-api-java.uber-jar>dp-api-java-shaded-${project.version}</dp-api-java.uber-jar>
        
		<!-- Data Platform Properties-->        
        <dp-grpc.version>1.6.1</dp-grpc.version>
        <dp-service.version>1.6.1</dp-service.version> <!-- Remove - Unused -->

        <!-- gRPC Properties -->
        <io.grpc.version>1.49.0</io.grpc.version>
        <io.grpc.version>1.65.1</io.grpc.version>

        <!-- Protobuf Properties -->
        <protobuf.version>4.0.0-rc-2</protobuf.version>
        <protobuf-java-format.version>1.4</protobuf-java-format.version>
        <protoc-gen-validate.version>0.6.7</protoc-gen-validate.version>
        <protobuf.version>4.27.2</protobuf.version>
        <protobuf-java-format.version>1.4</protobuf-java-format.version>

		<!-- EPICS Java Library Properties -->
    	<epics-core.version>7.0.7</epics-core.version>
    	<epics-ntypes.version>0.3.7</epics-ntypes.version>
    	<pvaclient.version>4.3.2</pvaclient.version>

		<!-- MongoDB Properties --> <!-- Should remove - no need for MongoDB imports -->
        <mongodb.version>4.9.1</mongodb.version>
        <mongodb.version>5.1.2</mongodb.version>
        
		<!-- Utilities Properties -->
		<commons-io.version>2.6</commons-io.version>
		<mockito-core.version>3.4.0</mockito-core.version>
        <log4j-version>2.20.0</log4j-version>
        <log4j-version>2.23.1</log4j-version>
        <snakeyaml.version>1.31</snakeyaml.version>
        <snakeyaml.version>2.2</snakeyaml.version>
        
    </properties>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <activatedProperties>dev</activatedProperties>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>ci</id>
            <properties>
                <activatedProperties>ci</activatedProperties>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <properties>
                <activatedProperties>release</activatedProperties>
            </properties>
        </profile>
    </profiles>
    
    <dependencies>
		
		<!-- ###### Data Platform ######## -->
		
		<!-- Data Platform gRPC Interface -->
        <dependency>
            <groupId>com.ospreydcs</groupId>
            <artifactId>dp-grpc</artifactId>
            <version>${dp-grpc.version}</version>
        </dependency>


		<!--  ###### EPICS Resources ##### -->
		
		<!-- EPICS Core for Java -->
	    <dependency>
	      <groupId>org.epics</groupId>
	      <artifactId>epics-core</artifactId>
	      <!--suppress MavenPackageUpdate -->
	      <version>${epics-core.version}</version>
	      <type>pom</type>
	    </dependency>
    
    	<!-- EPICS NTTYPES for Java -->
		<!-- https://mvnrepository.com/artifact/org.epics/epics-ntypes -->
		<dependency>
		    <groupId>org.epics</groupId>
		    <artifactId>epics-ntypes</artifactId>
		    <version>${epics-ntypes.version}</version>
		</dependency>
    
        <!--  EPICS PVACCESS Protocol for Java -->
    	<dependency>
      		<groupId>org.epics</groupId>
      		<artifactId>epics-pvaclient</artifactId>
    	  	<version>${pvaclient.version}</version>
	    </dependency>


		<!-- ###### MongoDB Resources ######## -->
		<!-- These should be removed - Unnecessary -->
		<!-- 
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>bson</artifactId>
            <version>${mongodb.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-driver-core</artifactId>
            <version>${mongodb.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-driver-sync</artifactId>
            <version>${mongodb.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-driver-reactivestreams</artifactId>
            <version>${mongodb.version}</version>
        </dependency>
        -->


		<!-- ###### Log4j Utility ######## -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j-version}</version>
        </dependency>


		<!-- ###### General Project Utilities ######## -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.yaml</groupId>
          <artifactId>snakeyaml</artifactId>
          <version>${snakeyaml.version}</version>
    	</dependency>
        
    </dependencies>


    <build>
        <plugins>
            <!-- Maven compiler plugin: compile for Java 8 -->
            <!-- CKA: We don't need explicit Maven comilation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!--
            Maven shade plugin configuration: this is required so that if you build a single JAR file (an "uber-jar")
            it will contain all the required native libraries, and the backends will work correctly.
            Used for example when running the following commants

            mvn package
            cd target
            java -cp dp-api-java com.ospreydcs.dp.api.JUnitTestExample

            <plugin>
            	<groupId>org.apache.maven.plugins</groupId>
            	<artifactId>maven-shade-plugin</artifactId>
            	<version>${maven-shade-plugin.version}</version>
            	
            	<executions>
            		<execution>
            			<phase>package</phase>
            			<goals>
            				<goal>shade</goal>
            			</goals>
            	
						<configuration>
        		        	<finalName>${dp-api-java.uber-jar}</finalName>
		            		<transformers>
            					<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
        		    				<manifestEntries>
		            					<Main-Class>${injestion.scenario.main-class}</Main-Class>
										<Multi-Release>true</Multi-Release>
										<Release-Number>${project.version}</Release-Number>
            							<Build-Number>${ingestion.scenario.build-number}</Build-Number>
									</manifestEntries>
        		    			</transformer>
					  		</transformers>
            				
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
											<exclude>META-INF/*.SF</exclude>
											<exclude>META-INF/*.DSA</exclude>
											<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<shadedArtifactAttached>true</shadedArtifactAttached>
						</configuration>

            		</execution>
            	</executions>
            </plugin>
            
            -->
            
        </plugins>
    </build>
    
</project>