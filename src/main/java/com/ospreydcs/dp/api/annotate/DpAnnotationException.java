/*
 * Project: dp-api-common
 * File:	DpAnnotationException.java
 * Package: com.ospreydcs.dp.api.annotate
 * Type: 	DpAnnotationException
 *
 * Copyright 2010-2025 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

 * @author Christopher K. Allen
 * @org    OspreyDCS
 * @since Feb 27, 2025
 *
 */
package com.ospreydcs.dp.api.annotate;

/**
 * <p>
 * General exception generated by the Java API Library for Annotation Service API errors.
 * </p>
 *
 * @author Christopher K. Allen
 * @since Feb 27, 2025
 *
 */
public class DpAnnotationException extends Exception {

    //
    // Class Constants
    //
    
    /** Serialization unique identifier */
    private static final long serialVersionUID = 6283878301765000271L;

    
    //
    // Constructors
    //
    
    /**
     * <p>
     * Constructs a new <code>DpAnnotationException</code> instance.
     * </p>
     */
    public DpAnnotationException() {
    }

    /**
     * <p>
     * Constructs a new <code>DpAnnotationException</code> instance initialized with the given argument.
     * </p>
     *
     * @param message   error message describing exception event
     */
    public DpAnnotationException(String message) {
        super(message);
    }

    /**
     * <p>
     * Constructs a new <code>DpAnnotationException</code> instance initialized with the given argument.
     * </p>
     *
     * @param cause     underlying cause of the exception event
     */
    public DpAnnotationException(Throwable cause) {
        super(cause);
    }

    /**
     * <p>
     * Constructs a new <code>DpAnnotationException</code> instance initialized with the given arguments.
     * </p>
     *
     * @param message   error message describing exception event
     * @param cause     underlying cause of the exception event, or <code>null</code> if non-existent or unknown
     */
    public DpAnnotationException(String message, Throwable cause) {
        super(message, cause);
    }

    /**
     * <p>
     * Constructs a new <code>DpAnnotationException</code> instance initialized with the given arguments.
     * </p>
     *
     * @param message               error message describing exception event
     * @param cause                 underlying cause of the exception event, or <code>null</code> if non-existent or unknown
     * @param enableSuppression     enable/disable suppression of exception event
     * @param writableStackTrace    enable/disable stack trace output
     */
    public DpAnnotationException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {
        super(message, cause, enableSuppression, writableStackTrace);
    }

}
